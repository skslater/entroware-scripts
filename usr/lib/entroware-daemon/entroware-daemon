#!/usr/bin/python3

import os, time

def init_daemon():
  try:
    # Create child.
    pid = os.fork()
    if pid != int(0):
      #print("Entroware daemon running as PID {0}".format(str(pid)))
      # Kill parent after sucessful fork.
      os._exit(0)

  except Exception as error:
    #print('Unexpected error occurred: {0}'.format(error))
    os._exit(1)  

  dpcd_backlight = dpcd_configure('/dev/drm_dp_aux0', 0x721, 4)
  dpcd_backlight.init()


class dpcd_configure:
  def __init__(self, device, offset, value):
    self.device = device
    self.offset = offset
    self.value = value

  def set(self):
    #print('Setting DPCD.')
    with open(self.device, 'wb+') as f:
      f.seek(self.offset)
      f.write(bytes([self.value]))

  def init(self):
    if os.path.exists(self.device):
      while True:
        time.sleep(5)
        with open (self.device, 'rb') as f:
          f.seek(self.offset)
          bright_byte = f.read(1)
          if bright_byte != bytes([self.value]):
            self.set()



if __name__ == '__main__':
  init_daemon()
